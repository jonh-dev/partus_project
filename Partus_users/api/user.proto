syntax = "proto3";

package api;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/jonh-dev/partus_users/api";

enum AccountStatus {
  ACTIVE = 0;
  INACTIVE = 1;
  PENDING = 2;
  SUSPENDED = 3;
}

message PersonalInfo {
  string userId = 1;
  string firstName = 2;
  string lastName = 3;
  string email = 4;
  google.protobuf.Timestamp birthDate = 5;
  string phone = 6;
  string profileImage = 7;
}

message AccountInfo {
  string userId = 1;
  string username = 2;
  string password = 3;
  AccountStatus accountStatus = 4;
  string statusReason = 5;
  google.protobuf.Timestamp createdAt = 6;
  google.protobuf.Timestamp updatedAt = 7;
  google.protobuf.Timestamp lastLogin = 8;
  int32 failedLoginAttempts = 9;
  google.protobuf.Timestamp lastFailedLogin = 10;
  string lastFailedLoginReason = 11;
  google.protobuf.Timestamp accountLockedUntil = 12;
  string accountLockedReason = 13;
}

message User {
  string id = 1;
  PersonalInfo personal_info = 2;
  AccountInfo account_info = 3;
}

service UserService {
  rpc CreateUser(CreateUserRequest) returns (UserResponse);
  rpc GetUser(GetUserRequest) returns (UserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (UserResponse);
  rpc HandleFailedLogin(HandleFailedLoginRequest) returns (UserResponse);
}

service PersonalInfoService {
  rpc CreatePersonalInfo(CreatePersonalInfoRequest) returns (PersonalInfoResponse);
  rpc GetPersonalInfo(GetPersonalInfoRequest) returns (PersonalInfoResponse);
  rpc UpdatePersonalInfo(UpdatePersonalInfoRequest) returns (PersonalInfoResponse);
  rpc DeletePersonalInfo(DeletePersonalInfoRequest) returns (PersonalInfoResponse);
}

service AccountInfoService {
  rpc CreateAccountInfo(CreateAccountInfoRequest) returns (AccountInfoResponse);
  rpc GetAccountInfo(GetAccountInfoRequest) returns (AccountInfoResponse);
  rpc UpdateAccountInfo(UpdateAccountInfoRequest) returns (AccountInfoResponse);
  rpc DeleteAccountInfo(DeleteAccountInfoRequest) returns (AccountInfoResponse);
}

message CreateUserRequest {
  User user = 1;
}

message GetUserRequest {
  string id = 1;
}

message UpdateUserRequest {
  User user = 1;
}

message DeleteUserRequest {
  string id = 1;
}

message HandleFailedLoginRequest {
  string username = 1;
  string reason = 2;
}

message UserResponse {
  User user = 1;
  string message = 2;
}

message CreatePersonalInfoRequest {
  PersonalInfo personalInfo = 1;
}

message GetPersonalInfoRequest {
  string userId = 1;
}

message UpdatePersonalInfoRequest {
  PersonalInfo personalInfo = 1;
}

message DeletePersonalInfoRequest {
  string userId = 1;
}

message PersonalInfoResponse {
  PersonalInfo personalInfo = 1;
  string message = 2;
}

message CreateAccountInfoRequest {
  AccountInfo accountInfo = 1;
}

message GetAccountInfoRequest {
  string userId = 1;
}

message UpdateAccountInfoRequest {
  AccountInfo accountInfo = 1;
}

message DeleteAccountInfoRequest {
  string userId = 1;
}

message AccountInfoResponse {
  AccountInfo accountInfo = 1;
  string message = 2;
}